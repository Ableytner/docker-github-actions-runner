name: Release tagged linux image

on:
  workflow_dispatch:
    inputs:
      version_number:
        required: true

defaults:
  run:
    shell: bash

jobs:
  build-linux:
    uses: ./.github/workflows/define-build-linux-image.yml
    secrets: inherit

  tag:
    runs-on: self-hosted
    steps:
    - uses: mukunku/tag-exists-action@v1.6.0
      id: check-tag
      with: 
        tag: ${{ github.event.inputs.version_number }}
    - name: Fail if tag exists
      if: steps.check-tag.outputs.exists == 'true' 
      run: |
        echo "Tag ${{ github.event.inputs.version_number }} exists!"
        exit 1
    - name: Print tag if it doesn't exist
      if: steps.check-tag.outputs.exists == 'false' 
      run: |
        echo "Tag ${{ github.event.inputs.version_number }} doesn't yet exist and can be created"

  push-linux:
    needs: [tag, build-linux]
    runs-on: [self-hosted, linux]
    permissions:
      contents: read
      packages: write
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: lowercase github.repository
      run: |
        echo "IMAGE_NAME=`echo ${{github.repository}} | tr '[:upper:]' '[:lower:]'`" >>${GITHUB_ENV}
    - name: Download cached docker image
      run: |
        curl -X GET http://192.168.0.145:25000/attachments/gha-runner/1/image_ubuntu.tar -o /tmp/image_ubuntu.tar
    - name: Load image
      run: |
        docker load --input /tmp/image_ubuntu.tar
    - name: Push
      run: |
        docker tag ${{ env.IMAGE_NAME }}:latest-ubuntu ghcr.io/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version_number }}-ubuntu
        docker push ghcr.io/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version_number }}-ubuntu
        docker tag ghcr.io/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version_number }}-ubuntu ghcr.io/${{ env.IMAGE_NAME }}:latest-ubuntu
        docker push ghcr.io/${{ env.IMAGE_NAME }}:latest-ubuntu
    - name: Remove local image
      if: always()
      run: |
        docker image rm ${{ env.IMAGE_NAME }}:latest-ubuntu
    - name: Remove cached docker image
      if: always()
      run: |
        curl -X DELETE http://192.168.0.145:25000/attachments/gha-runner/1/image_ubuntu.tar

  release:
    needs: [tag, build-linux, push-linux]
    runs-on: [self-hosted, linux]
    permissions:
      contents: write
    steps:
    - name: Create body.md
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh api --method POST -H "Accept: application/vnd.github+json" \
          "/repos/${GITHUB_REPOSITORY}/releases/generate-notes" \
          -f tag_name="${{ github.event.inputs.version_number }}" \
          --jq ".body" \
          > body.md
    - name: Create new release
      uses: ncipollo/release-action@v1
      with:
        bodyFile: body.md
        tag: ${{ github.event.inputs.version_number }}
        token: ${{ secrets.GITHUB_TOKEN }}
